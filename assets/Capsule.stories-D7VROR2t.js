import{p as G,s as ne,r as ie,i as ae,a as oe,t as re}from"./props-CDwtXEPn.js";import{p as Y,a as Q,f as ce,s as Z,g as pe,n as le,d as de}from"./index-client-0IVJ1HVs.js";import{M as J,u as K,V as f,w as q,x as ye,v as ue,k as he,c as me,d as be,C as fe,E as ve,S as xe,H as Se}from"./create-runtime-stories-CMkdhrdB.js";import{F as ke}from"./FreeCamera-DQnrkUYb.js";import"./iframe-p99vTRwq.js";import"../sb-preview/runtime.js";import"./index-D-8MO0q_.js";import"./index-BHYIh-Xd.js";import"./_commonjsHelpers-Cpj98o6Y.js";function W(e={subdivisions:2,tessellation:16,height:1,radius:.25,capSubdivisions:6}){const l=Math.max(e.subdivisions?e.subdivisions:2,1)|0,v=Math.max(e.tessellation?e.tessellation:16,3)|0,b=Math.max(e.height?e.height:1,0),r=Math.max(e.radius?e.radius:.25,0),T=Math.max(e.capSubdivisions?e.capSubdivisions:6,1)|0,x=v,g=l,o=Math.max(e.radiusTop?e.radiusTop:r,0),c=Math.max(e.radiusBottom?e.radiusBottom:r,0),B=b-(o+c),E=0,_=2*Math.PI,C=Math.max(e.topCapSubdivisions?e.topCapSubdivisions:T,1),z=Math.max(e.bottomCapSubdivisions?e.bottomCapSubdivisions:T,1),h=Math.acos((c-o)/b);let y=[];const p=[],w=[],M=[];let D=0;const P=[],H=B*.5,O=Math.PI*.5;let n,s;const u=f.Zero(),i=f.Zero(),I=Math.cos(h),j=Math.sin(h),F=new q(o*j,H+o*I).subtract(new q(c*j,-H+c*I)).length(),U=o*h+F+c*(O-h);let L=0;for(s=0;s<=C;s++){const d=[],a=O-h*(s/C);L+=o*h/C;const t=Math.cos(a),m=Math.sin(a),S=t*o;for(n=0;n<=x;n++){const k=n/x,$=k*_+E,R=Math.sin($),V=Math.cos($);i.x=S*R,i.y=H+m*o,i.z=S*V,p.push(i.x,i.y,i.z),u.set(t*R,m,t*V),w.push(u.x,u.y,u.z),M.push(k,1-L/U),d.push(D),D++}P.push(d)}const X=b-o-c+I*o-I*c,se=j*(c-o)/X;for(s=1;s<=g;s++){const d=[];L+=F/g;const a=j*(s*(c-o)/g+o);for(n=0;n<=x;n++){const t=n/x,m=t*_+E,S=Math.sin(m),k=Math.cos(m);i.x=a*S,i.y=H+I*o-s*X/g,i.z=a*k,p.push(i.x,i.y,i.z),u.set(S,se,k).normalize(),w.push(u.x,u.y,u.z),M.push(t,1-L/U),d.push(D),D++}P.push(d)}for(s=1;s<=z;s++){const d=[],a=O-h-(Math.PI-h)*(s/z);L+=c*h/z;const t=Math.cos(a),m=Math.sin(a),S=t*c;for(n=0;n<=x;n++){const k=n/x,$=k*_+E,R=Math.sin($),V=Math.cos($);i.x=S*R,i.y=-H+m*c,i.z=S*V,p.push(i.x,i.y,i.z),u.set(t*R,m,t*V),w.push(u.x,u.y,u.z),M.push(k,1-L/U),d.push(D),D++}P.push(d)}for(n=0;n<x;n++)for(s=0;s<C+g+z;s++){const d=P[s][n],a=P[s+1][n],t=P[s+1][n+1],m=P[s][n+1];y.push(d),y.push(a),y.push(m),y.push(a),y.push(t),y.push(m)}if(y=y.reverse(),e.orientation&&!e.orientation.equals(f.Up())){const d=new ye;e.orientation.clone().scale(Math.PI*.5).cross(f.Up()).toQuaternion().toRotationMatrix(d);const a=f.Zero();for(let t=0;t<p.length;t+=3)a.set(p[t],p[t+1],p[t+2]),f.TransformCoordinatesToRef(a.clone(),d,a),p[t]=a.x,p[t+1]=a.y,p[t+2]=a.z}const A=new K;return A.positions=p,A.normals=w,A.uvs=M,A.indices=y,A}function ee(e,l={orientation:f.Up(),subdivisions:2,tessellation:16,height:1,radius:.25,capSubdivisions:6,updatable:!1},v=null){const b=new J(e,v);return W(l).applyToMesh(b,l.updatable),b}J.CreateCapsule=(e,l,v)=>ee(e,l,v);K.CreateCapsule=W;function N(e,l){Y(l,!0);let v=G(l,"mesh",15),b=G(l,"physicsShape",19,()=>ue.CAPSULE),r=ie(l,["$$slots","$$events","$$legacy","mesh","physicsShape"]);he(e,ne({createMeshFunction:ee,get physicsShape(){return b()}},()=>r,{get mesh(){return v()},set mesh(T){v(T)}})),Q()}N.__docgen={data:[{name:"options",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"ICreateCapsuleOptions"},static:!1,readonly:!1},{name:"scene",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"Scene"},static:!1,readonly:!1},{name:"children",visibility:"public",keywords:[],kind:"let",type:{kind:"function",text:"Snippet<[]>"},static:!1,readonly:!1},{name:"mesh",visibility:"public",description:"if you want to use a mesh api, bind it",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"Mesh"},static:!1,readonly:!1,defaultValue:"..."},{name:"physics",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"boolean",text:"boolean"},static:!1,readonly:!1},{name:"physicsShape",visibility:"public",keywords:[],kind:"let",type:{kind:"union",type:[{kind:"const",type:"number",value:0,text:"PhysicsShapeType.SPHERE"},{kind:"const",type:"number",value:1,text:"PhysicsShapeType.CAPSULE"},{kind:"const",type:"number",value:2,text:"PhysicsShapeType.CYLINDER"},{kind:"const",type:"number",value:3,text:"PhysicsShapeType.BOX"},{kind:"const",type:"number",value:4,text:"PhysicsShapeType.CONVEX_HULL"},{kind:"const",type:"number",value:5,text:"PhysicsShapeType.CONTAINER"},{kind:"const",type:"number",value:6,text:"PhysicsShapeType.MESH"},{kind:"const",type:"number",value:7,text:"PhysicsShapeType.HEIGHTFIELD"},{kind:"type",type:"object",text:"PhysicsShape"}],text:"PhysicsShapeType.SPHERE | PhysicsShapeType.CAPSULE | PhysicsShapeType.CYLINDER | PhysicsShapeType.BOX | PhysicsShapeType.CONVEX_HULL | PhysicsShapeType.CONTAINER | PhysicsShapeType.MESH | PhysicsShapeType.HEIGHTFIELD | PhysicsShape"},static:!1,readonly:!1,defaultValue:"PhysicsShapeType.CAPSULE"},{name:"physicsOptions",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"PhysicsAggregateParameters"},static:!1,readonly:!1},{name:"position",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"{ x: number; y: number; z: number; }"},static:!1,readonly:!1},{name:"rotation",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"{ x: number; y: number; z: number; }"},static:!1,readonly:!1},{name:"scaling",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"{ x: number; y: number; z: number; }"},static:!1,readonly:!1},{name:"force",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"{ x: number; y: number; z: number; }"},static:!1,readonly:!1},{name:"impulse",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"{ x: number; y: number; z: number; }"},static:!1,readonly:!1},{name:"receivedShadows",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"boolean",text:"boolean"},static:!1,readonly:!1},{name:"shadowEnabled",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"boolean",text:"boolean"},static:!1,readonly:!1},{name:"shadowGroup",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"array",text:"string[]"},static:!1,readonly:!1},{name:"onCollision",visibility:"public",keywords:[],kind:"let",type:{kind:"function",text:"(eventData: IPhysicsCollisionEvent, eventState: EventState) => void"},static:!1,readonly:!1},{name:"onCollisionOnce",visibility:"public",keywords:[],kind:"let",type:{kind:"function",text:"(eventData: IPhysicsCollisionEvent, eventState: EventState) => void"},static:!1,readonly:!1}],name:"Capsule.svelte"};const ge={title:"mesh/Capsule",tags:["autodocs"],component:N},{Story:Ce}=be();var we=re("<!> <!> <!>",1);function te(e,l){Y(l,!1),ae(),Ce(e,{name:"Docs",args:{options:{orientation:{x:0,y:0,z:0},subdivisions:void 0,tessellation:void 0,height:4,radius:1,capSubdivisions:void 0,radiusTop:void 0,radiusBottom:void 0,topCapSubdivisions:void 0,bottomCapSubdivisions:void 0,updatable:void 0},position:{x:0,y:0,z:0},rotation:{x:0,y:0,z:0},scaling:{x:1,y:1,z:1}},children:(b,r=le)=>{fe(b,{style:"width: 100%;",children:(T,x)=>{ve(T,{children:(g,o)=>{xe(g,{children:(c,B)=>{var E=we(),_=ce(E);ke(_,{position:new f(0,5,-10)});var C=Z(_,2);Se(C,{direction:new f(0,1,0),intensity:.7});var z=Z(C,2),h=de(()=>{var y,p,w,M;return{...r().options,orientation:(y=r().options)!=null&&y.orientation?new f((p=r().options)==null?void 0:p.orientation.x,(w=r().options)==null?void 0:w.orientation.y,(M=r().options)==null?void 0:M.orientation.z):void 0}});N(z,{get options(){return pe(h)},get position(){return r().position},get rotation(){return r().rotation},get scaling(){return r().scaling}}),oe(c,E)},$$slots:{default:!0}})},$$slots:{default:!0}})},$$slots:{default:!0}})},$$slots:{default:!0},parameters:{__svelteCsf:{rawCode:`<Canvas style="width: 100%;">
  <Engine>
    <Scene>
      <FreeCamera position={new Vector3(0, 5, -10)} />
      <HemisphericLight direction={new Vector3(0, 1, 0)} intensity={0.7} />
      <Capsule
        options={{
          ...args.options,
          orientation: args.options?.orientation
            ? new Vector3(
                args.options?.orientation.x,
                args.options?.orientation.y,
                args.options?.orientation.z
              )
            : undefined
        }}
        position={args.position}
        rotation={args.rotation}
        scaling={args.scaling}
      />
    </Scene>
  </Engine>
</Canvas>`}}}),Q()}te.__docgen={version:3,name:"Capsule.stories.svelte",data:[],computed:[],methods:[],components:[],description:null,keywords:[],events:[],slots:[],refs:[]};const Me=me(te,ge),Ae=["Docs"],$e=Me.Docs;export{$e as Docs,Ae as __namedExportsOrder,ge as default};
