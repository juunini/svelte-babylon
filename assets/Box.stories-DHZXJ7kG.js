import{p as H,s as q,r as T,i as G,a as R,t as J}from"./props-D_CwaEcb.js";import{p as K,a as N,f as Q,b as W,n as X,c as E,d as Y}from"./index-client-a4XWVA08.js";import{h as V,M as z,f as _,l as M,m as Z,n as ee,o as te,p as ne,q as oe,r as se,F as ie,V as j,H as ae}from"./create-runtime-stories-C658kcdY.js";import"./groundBuilder-CLWbpC4z.js";import"./iframe-Dzwdsmzj.js";import"../sb-preview/runtime.js";import"./index-D-8MO0q_.js";import"./index-BHYIh-Xd.js";import"./_commonjsHelpers-Cpj98o6Y.js";function I(n){let s=[0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23];const c=[0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0],t=[];let b=[];const O=n.width||n.size||1,C=n.height||n.size||1,D=n.depth||n.size||1,B=n.wrap||!1;let w=n.topBaseAt===void 0?1:n.topBaseAt,y=n.bottomBaseAt===void 0?0:n.bottomBaseAt;w=(w+4)%4,y=(y+4)%4;const x=[2,0,3,1],U=[2,0,1,3];let k=x[w],v=U[y],u=[1,-1,1,-1,-1,1,-1,1,1,1,1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1,1,1,-1,1,-1,-1,1,-1,1,1,1,1,-1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1,1,1,-1,1,-1,1,1,-1,1,1,1,1,-1,1,1,-1,-1,-1,-1,-1,-1,-1,1];if(B){s=[2,3,0,2,0,1,4,5,6,4,6,7,9,10,11,9,11,8,12,14,15,12,13,14],u=[-1,1,1,1,1,1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1,1,1,1,1,1,-1,1,-1,-1,1,-1,1,-1,1,-1,-1,1,1,-1,-1,1,-1,-1,-1];let e=[[1,1,1],[-1,1,1],[-1,1,-1],[1,1,-1]],a=[[-1,-1,1],[1,-1,1],[1,-1,-1],[-1,-1,-1]];const r=[17,18,19,16],l=[22,23,20,21];for(;k>0;)e.unshift(e.pop()),r.unshift(r.pop()),k--;for(;v>0;)a.unshift(a.pop()),l.unshift(l.pop()),v--;e=e.flat(),a=a.flat(),u=u.concat(e).concat(a),s.push(r[0],r[2],r[3],r[0],r[1],r[2]),s.push(l[0],l[2],l[3],l[0],l[1],l[2])}const g=[O/2,C/2,D/2];b=u.reduce((e,a,r)=>e.concat(a*g[r%3]),[]);const h=n.sideOrientation===0?0:n.sideOrientation||V.DEFAULTSIDE,i=n.faceUV||new Array(6),d=n.faceColors,m=[];for(let e=0;e<6;e++)i[e]===void 0&&(i[e]=new _(0,0,1,1)),d&&d[e]===void 0&&(d[e]=new M(1,1,1,1));for(let e=0;e<6;e++)if(t.push(i[e].z,i[e].w),t.push(i[e].x,i[e].w),t.push(i[e].x,i[e].y),t.push(i[e].z,i[e].y),d)for(let a=0;a<4;a++)m.push(d[e].r,d[e].g,d[e].b,d[e].a);V._ComputeSides(h,b,s,c,t,n.frontUVs,n.backUVs);const p=new V;if(p.indices=s,p.positions=b,p.normals=c,p.uvs=t,d){const e=h===V.DOUBLESIDE?m.concat(m):m;p.colors=e}return p}function L(n,o={},s=null){const c=new z(n,s);return o.sideOrientation=z._GetDefaultSideOrientation(o.sideOrientation),c._originalBuilderSideOrientation=o.sideOrientation,I(o).applyToMesh(c,o.updatable),c}V.CreateBox=I;z.CreateBox=(n,o,s=null,c,t)=>L(n,{size:o,sideOrientation:t,updatable:c},s);function $(n,o){let s=H(o,"mesh",15),c=T(o,["$$slots","$$events","$$legacy","mesh"]);Z(n,q({createMeshFunction:L},()=>c,{get mesh(){return s()},set mesh(t){s(t)}}))}$.__docgen={data:[{name:"options",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"{ backUVs?: Vector4 | undefined; bottomBaseAt?: number | undefined; depth?: number | undefined; faceColors?: Color4[] | undefined; faceUV?: Vector4[] | undefined; ... 7 more ...; wrap?: boolean | undefined; }"},static:!1,readonly:!1},{name:"scene",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"Scene"},static:!1,readonly:!1},{name:"children",visibility:"public",keywords:[],kind:"let",type:{kind:"function",text:"Snippet<[]>"},static:!1,readonly:!1},{name:"mesh",visibility:"public",description:"if you want to use a mesh api, bind it",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"Mesh"},static:!1,readonly:!1,defaultValue:"..."},{name:"position",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"{ x: number; y: number; z: number; }"},static:!1,readonly:!1},{name:"rotation",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"{ x: number; y: number; z: number; }"},static:!1,readonly:!1},{name:"scaling",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"{ x: number; y: number; z: number; }"},static:!1,readonly:!1}],name:"Box.svelte"};const re={title:"mesh/Box",tags:["autodocs"],component:$},{Story:ce}=te();var de=J("<!> <!> <!>",1);function P(n,o){K(o,!1),G(),ce(n,{name:"Docs",args:{options:{backUVs:{x:0,y:0,z:1,w:1},bottomBaseAt:void 0,depth:4,faceColors:[{r:1,g:1,b:1,a:1}],faceUV:[{x:0,y:0,z:1,w:1}],frontUVs:{x:0,y:0,z:1,w:1},height:4,sideOrientation:void 0,size:void 0,topBaseAt:void 0,updatable:void 0,width:4,wrap:void 0},position:{x:0,y:0,z:0},rotation:{x:0,y:0,z:0},scaling:{x:1,y:1,z:1}},children:(c,t=X)=>{ne(c,{style:"width: 100%;",children:(b,O)=>{oe(b,{children:(C,D)=>{se(C,{children:(B,w)=>{var y=de(),x=Q(y);ie(x,{position:new j(0,5,-10)});var U=E(x,2);ae(U,{direction:new j(0,1,0),intensity:.7});var k=E(U,2),v=Y(()=>{var u,g,h,i,d,m,p,e,a,r,l,S,A,F;return{...t().options,faceUV:(g=(u=t().options)==null?void 0:u.faceUV)==null?void 0:g.map(f=>new _(f.x,f.y,f.z,f.w)),faceColors:(i=(h=t().options)==null?void 0:h.faceColors)==null?void 0:i.map(f=>new M(f.r,f.g,f.b,f.a)),frontUVs:(d=t().options)!=null&&d.frontUVs?new _((m=t().options)==null?void 0:m.frontUVs.x,(p=t().options)==null?void 0:p.frontUVs.y,(e=t().options)==null?void 0:e.frontUVs.z,(a=t().options)==null?void 0:a.frontUVs.w):void 0,backUVs:(r=t().options)!=null&&r.backUVs?new _((l=t().options)==null?void 0:l.backUVs.x,(S=t().options)==null?void 0:S.backUVs.y,(A=t().options)==null?void 0:A.backUVs.z,(F=t().options)==null?void 0:F.backUVs.w):void 0}});$(k,{get options(){return W(v)},get position(){return t().position},get rotation(){return t().rotation},get scaling(){return t().scaling}}),R(B,y)},$$slots:{default:!0}})},$$slots:{default:!0}})},$$slots:{default:!0}})},$$slots:{default:!0},parameters:{__svelteCsf:{rawCode:`<Canvas style="width: 100%;">
  <Engine>
    <Scene>
      <FreeCamera position={new Vector3(0, 5, -10)} />
      <HemisphericLight direction={new Vector3(0, 1, 0)} intensity={0.7} />
      <Box
        options={{
          ...args.options,
          faceUV: args.options?.faceUV?.map((v) => new Vector4(v.x, v.y, v.z, v.w)),
          faceColors: args.options?.faceColors?.map((v) => new Color4(v.r, v.g, v.b, v.a)),
          frontUVs: args.options?.frontUVs
            ? new Vector4(
                args.options?.frontUVs.x,
                args.options?.frontUVs.y,
                args.options?.frontUVs.z,
                args.options?.frontUVs.w
              )
            : undefined,
          backUVs: args.options?.backUVs
            ? new Vector4(
                args.options?.backUVs.x,
                args.options?.backUVs.y,
                args.options?.backUVs.z,
                args.options?.backUVs.w
              )
            : undefined
        }}
        position={args.position}
        rotation={args.rotation}
        scaling={args.scaling}
      />
    </Scene>
  </Engine>
</Canvas>`}}}),N()}P.__docgen={version:3,name:"Box.stories.svelte",data:[],computed:[],methods:[],components:[],description:null,keywords:[],events:[],slots:[],refs:[]};const le=ee(P,re),xe=["Docs"],Ue=le.Docs;export{Ue as Docs,xe as __namedExportsOrder,re as default};
