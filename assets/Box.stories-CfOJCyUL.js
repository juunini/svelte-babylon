import{p as I,s as R,r as N,i as X,a as G,t as Y}from"./props-CDwtXEPn.js";import{p as L,a as H,f as q,s as D,g as J,n as K,d as Q}from"./index-client-0IVJ1HVs.js";import{u as k,M as E,m as U,n as M,v as W,l as Z,c as ee,d as te,C as se,E as ne,S as ie,A as ae,H as oe,V as re}from"./create-runtime-stories-DlYX6Gso.js";import"./iframe-DXvAOt9X.js";import"../sb-preview/runtime.js";import"./index-D-8MO0q_.js";import"./index-BHYIh-Xd.js";import"./_commonjsHelpers-Cpj98o6Y.js";function $(s){let i=[0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23];const c=[0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0],t=[];let u=[];const z=s.width||s.size||1,C=s.height||s.size||1,B=s.depth||s.size||1,P=s.wrap||!1;let x=s.topBaseAt===void 0?1:s.topBaseAt,b=s.bottomBaseAt===void 0?0:s.bottomBaseAt;x=(x+4)%4,b=(b+4)%4;const v=[2,0,3,1],w=[2,0,1,3];let S=v[x],V=w[b],f=[1,-1,1,-1,-1,1,-1,1,1,1,1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1,1,1,-1,1,-1,-1,1,-1,1,1,1,1,-1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1,1,1,-1,1,-1,1,1,-1,1,1,1,1,-1,1,1,-1,-1,-1,-1,-1,-1,-1,1];if(P){i=[2,3,0,2,0,1,4,5,6,4,6,7,9,10,11,9,11,8,12,14,15,12,13,14],f=[-1,1,1,1,1,1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1,1,1,1,1,1,-1,1,-1,-1,1,-1,1,-1,1,-1,-1,1,1,-1,-1,1,-1,-1,-1];let e=[[1,1,1],[-1,1,1],[-1,1,-1],[1,1,-1]],o=[[-1,-1,1],[1,-1,1],[1,-1,-1],[-1,-1,-1]];const r=[17,18,19,16],p=[22,23,20,21];for(;S>0;)e.unshift(e.pop()),r.unshift(r.pop()),S--;for(;V>0;)o.unshift(o.pop()),p.unshift(p.pop()),V--;e=e.flat(),o=o.flat(),f=f.concat(e).concat(o),i.push(r[0],r[2],r[3],r[0],r[1],r[2]),i.push(p[0],p[2],p[3],p[0],p[1],p[2])}const g=[z/2,C/2,B/2];u=f.reduce((e,o,r)=>e.concat(o*g[r%3]),[]);const m=s.sideOrientation===0?0:s.sideOrientation||k.DEFAULTSIDE,a=s.faceUV||new Array(6),l=s.faceColors,h=[];for(let e=0;e<6;e++)a[e]===void 0&&(a[e]=new U(0,0,1,1)),l&&l[e]===void 0&&(l[e]=new M(1,1,1,1));for(let e=0;e<6;e++)if(t.push(a[e].z,a[e].w),t.push(a[e].x,a[e].w),t.push(a[e].x,a[e].y),t.push(a[e].z,a[e].y),l)for(let o=0;o<4;o++)h.push(l[e].r,l[e].g,l[e].b,l[e].a);k._ComputeSides(m,u,i,c,t,s.frontUVs,s.backUVs);const d=new k;if(d.indices=i,d.positions=u,d.normals=c,d.uvs=t,l){const e=m===k.DOUBLESIDE?h.concat(h):h;d.colors=e}return d}function j(s,n={},i=null){const c=new E(s,i);return n.sideOrientation=E._GetDefaultSideOrientation(n.sideOrientation),c._originalBuilderSideOrientation=n.sideOrientation,$(n).applyToMesh(c,n.updatable),c}k.CreateBox=$;E.CreateBox=(s,n,i=null,c,t)=>j(s,{size:n,sideOrientation:t,updatable:c},i);function _(s,n){L(n,!0);let i=I(n,"mesh",15),c=I(n,"physicsShape",19,()=>W.BOX),t=N(n,["$$slots","$$events","$$legacy","mesh","physicsShape"]);Z(s,R({createMeshFunction:j,get physicsShape(){return c()}},()=>t,{get mesh(){return i()},set mesh(u){i(u)}})),H()}_.__docgen={data:[{name:"options",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"{ backUVs?: Vector4 | undefined; bottomBaseAt?: number | undefined; depth?: number | undefined; faceColors?: Color4[] | undefined; faceUV?: Vector4[] | undefined; ... 7 more ...; wrap?: boolean | undefined; }"},static:!1,readonly:!1},{name:"scene",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"Scene"},static:!1,readonly:!1},{name:"children",visibility:"public",keywords:[],kind:"let",type:{kind:"function",text:"Snippet<[]>"},static:!1,readonly:!1},{name:"mesh",visibility:"public",description:"if you want to use a mesh api, bind it",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"Mesh"},static:!1,readonly:!1,defaultValue:"..."},{name:"physics",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"boolean",text:"boolean"},static:!1,readonly:!1},{name:"physicsShape",visibility:"public",keywords:[],kind:"let",type:{kind:"union",type:[{kind:"const",type:"number",value:0,text:"PhysicsShapeType.SPHERE"},{kind:"const",type:"number",value:1,text:"PhysicsShapeType.CAPSULE"},{kind:"const",type:"number",value:2,text:"PhysicsShapeType.CYLINDER"},{kind:"const",type:"number",value:3,text:"PhysicsShapeType.BOX"},{kind:"const",type:"number",value:4,text:"PhysicsShapeType.CONVEX_HULL"},{kind:"const",type:"number",value:5,text:"PhysicsShapeType.CONTAINER"},{kind:"const",type:"number",value:6,text:"PhysicsShapeType.MESH"},{kind:"const",type:"number",value:7,text:"PhysicsShapeType.HEIGHTFIELD"},{kind:"type",type:"object",text:"PhysicsShape"}],text:"PhysicsShapeType.SPHERE | PhysicsShapeType.CAPSULE | PhysicsShapeType.CYLINDER | PhysicsShapeType.BOX | PhysicsShapeType.CONVEX_HULL | PhysicsShapeType.CONTAINER | PhysicsShapeType.MESH | PhysicsShapeType.HEIGHTFIELD | PhysicsShape"},static:!1,readonly:!1,defaultValue:"PhysicsShapeType.BOX"},{name:"physicsOptions",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"PhysicsAggregateParameters"},static:!1,readonly:!1},{name:"position",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"{ x: number; y: number; z: number; }"},static:!1,readonly:!1},{name:"rotation",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"{ x: number; y: number; z: number; }"},static:!1,readonly:!1},{name:"scaling",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"{ x: number; y: number; z: number; }"},static:!1,readonly:!1},{name:"force",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"{ x: number; y: number; z: number; }"},static:!1,readonly:!1},{name:"impulse",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"{ x: number; y: number; z: number; }"},static:!1,readonly:!1},{name:"collideAgainstForce",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"{ x: number; y: number; z: number; }"},static:!1,readonly:!1},{name:"collideAgainstImpulse",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"{ x: number; y: number; z: number; }"},static:!1,readonly:!1},{name:"receiveShadows",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"boolean",text:"boolean"},static:!1,readonly:!1},{name:"shadowEnabled",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"boolean",text:"boolean"},static:!1,readonly:!1},{name:"shadowGroup",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"array",text:"string[]"},static:!1,readonly:!1},{name:"onCollision",visibility:"public",keywords:[],kind:"let",type:{kind:"function",text:"(eventData: IPhysicsCollisionEvent, eventState: EventState) => void"},static:!1,readonly:!1},{name:"onCollisionOnce",visibility:"public",keywords:[],kind:"let",type:{kind:"function",text:"(eventData: IPhysicsCollisionEvent, eventState: EventState) => void"},static:!1,readonly:!1}],name:"Box.svelte"};const ce={title:"mesh/Box",tags:["autodocs"],component:_},{Story:le}=te();var pe=Y("<!> <!> <!>",1);function F(s,n){L(n,!1),X(),le(s,{name:"Docs",args:{options:{backUVs:{x:0,y:0,z:1,w:1},bottomBaseAt:void 0,depth:4,faceColors:[{r:1,g:1,b:1,a:1}],faceUV:[{x:0,y:0,z:1,w:1}],frontUVs:{x:0,y:0,z:1,w:1},height:4,sideOrientation:void 0,size:void 0,topBaseAt:void 0,updatable:void 0,width:4,wrap:void 0},position:{x:0,y:0,z:0},rotation:{x:0,y:0,z:0},scaling:{x:1,y:1,z:1}},parameters:{docs:{canvas:{sourceState:"shown"},source:{code:`<Canvas style="width: 100%;">
  <Engine>
    <Scene physics={false}>
      <ArcRotateCamera alpha={Math.PI / 2} beta={Math.PI / 2} radius={10} />
      <HemisphericLight direction={new Vector3(0, 1, 0)} intensity={0.7} />
      <Box
        options={{ width: 4, height: 4, depth: 4 }}
        position={{ x: 0, y: 0, z: 0 }}
        rotation={{ x: 0, y: 0, z: 0 }}
        scaling={{ x: 1, y: 1, z: 1 }}
      />
    </Scene>
  </Engine>
</Canvas>`}},__svelteCsf:{rawCode:`<Canvas style="width: 100%;">
  <Engine>
    <Scene physics={false}>
      <ArcRotateCamera alpha={Math.PI / 2} beta={Math.PI / 2} radius={10} />
      <HemisphericLight direction={new Vector3(0, 1, 0)} intensity={0.7} />
      <Box
        options={{
          ...args.options,
          faceUV: args.options?.faceUV?.map((v) => new Vector4(v.x, v.y, v.z, v.w)),
          faceColors: args.options?.faceColors?.map((v) => new Color4(v.r, v.g, v.b, v.a)),
          frontUVs: args.options?.frontUVs
            ? new Vector4(
                args.options?.frontUVs.x,
                args.options?.frontUVs.y,
                args.options?.frontUVs.z,
                args.options?.frontUVs.w
              )
            : undefined,
          backUVs: args.options?.backUVs
            ? new Vector4(
                args.options?.backUVs.x,
                args.options?.backUVs.y,
                args.options?.backUVs.z,
                args.options?.backUVs.w
              )
            : undefined
        }}
        position={args.position}
        rotation={args.rotation}
        scaling={args.scaling}
      />
    </Scene>
  </Engine>
</Canvas>`}},children:(c,t=K)=>{se(c,{style:"width: 100%;",children:(u,z)=>{ne(u,{children:(C,B)=>{ie(C,{physics:!1,children:(P,x)=>{var b=pe(),v=q(b);ae(v,{alpha:Math.PI/2,beta:Math.PI/2,radius:10});var w=D(v,2);oe(w,{direction:new re(0,1,0),intensity:.7});var S=D(w,2),V=Q(()=>{var f,g,m,a,l,h,d,e,o,r,p,O,T,A;return{...t().options,faceUV:(g=(f=t().options)==null?void 0:f.faceUV)==null?void 0:g.map(y=>new U(y.x,y.y,y.z,y.w)),faceColors:(a=(m=t().options)==null?void 0:m.faceColors)==null?void 0:a.map(y=>new M(y.r,y.g,y.b,y.a)),frontUVs:(l=t().options)!=null&&l.frontUVs?new U((h=t().options)==null?void 0:h.frontUVs.x,(d=t().options)==null?void 0:d.frontUVs.y,(e=t().options)==null?void 0:e.frontUVs.z,(o=t().options)==null?void 0:o.frontUVs.w):void 0,backUVs:(r=t().options)!=null&&r.backUVs?new U((p=t().options)==null?void 0:p.backUVs.x,(O=t().options)==null?void 0:O.backUVs.y,(T=t().options)==null?void 0:T.backUVs.z,(A=t().options)==null?void 0:A.backUVs.w):void 0}});_(S,{get options(){return J(V)},get position(){return t().position},get rotation(){return t().rotation},get scaling(){return t().scaling}}),G(P,b)},$$slots:{default:!0}})},$$slots:{default:!0}})},$$slots:{default:!0}})},$$slots:{default:!0}}),H()}F.__docgen={version:3,name:"Box.stories.svelte",data:[],computed:[],methods:[],components:[],description:null,keywords:[],events:[],slots:[],refs:[]};const de=ee(F,ce),ve=["Docs"],we=de.Docs;export{we as Docs,ve as __namedExportsOrder,ce as default};
