import{p as A,s as R,r as X,i as G,a as Y,t as q}from"./props-CDwtXEPn.js";import{p as $,a as F,f as J,g as K,n as Q,s as I,d as W}from"./index-client-0IVJ1HVs.js";import{v as k,M as E,m as g,n as H,w as Z,k as ee,c as te,d as ne,C as se,E as ie,S as oe,V as L,H as ae}from"./create-runtime-stories-D2yFG5at.js";import{F as re}from"./FreeCamera-B8cQlsl3.js";import"./iframe-2opK77xr.js";import"../sb-preview/runtime.js";import"./index-D-8MO0q_.js";import"./index-BHYIh-Xd.js";import"./_commonjsHelpers-Cpj98o6Y.js";function j(n){let i=[0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23];const c=[0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0],t=[];let u=[];const B=n.width||n.size||1,C=n.height||n.size||1,O=n.depth||n.size||1,P=n.wrap||!1;let x=n.topBaseAt===void 0?1:n.topBaseAt,b=n.bottomBaseAt===void 0?0:n.bottomBaseAt;x=(x+4)%4,b=(b+4)%4;const v=[2,0,3,1],w=[2,0,1,3];let V=v[x],S=w[b],f=[1,-1,1,-1,-1,1,-1,1,1,1,1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1,1,1,-1,1,-1,-1,1,-1,1,1,1,1,-1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1,1,1,-1,1,-1,1,1,-1,1,1,1,1,-1,1,1,-1,-1,-1,-1,-1,-1,-1,1];if(P){i=[2,3,0,2,0,1,4,5,6,4,6,7,9,10,11,9,11,8,12,14,15,12,13,14],f=[-1,1,1,1,1,1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1,1,1,1,1,1,-1,1,-1,-1,1,-1,1,-1,1,-1,-1,1,1,-1,-1,1,-1,-1,-1];let e=[[1,1,1],[-1,1,1],[-1,1,-1],[1,1,-1]],a=[[-1,-1,1],[1,-1,1],[1,-1,-1],[-1,-1,-1]];const r=[17,18,19,16],l=[22,23,20,21];for(;V>0;)e.unshift(e.pop()),r.unshift(r.pop()),V--;for(;S>0;)a.unshift(a.pop()),l.unshift(l.pop()),S--;e=e.flat(),a=a.flat(),f=f.concat(e).concat(a),i.push(r[0],r[2],r[3],r[0],r[1],r[2]),i.push(l[0],l[2],l[3],l[0],l[1],l[2])}const U=[B/2,C/2,O/2];u=f.reduce((e,a,r)=>e.concat(a*U[r%3]),[]);const m=n.sideOrientation===0?0:n.sideOrientation||k.DEFAULTSIDE,o=n.faceUV||new Array(6),p=n.faceColors,h=[];for(let e=0;e<6;e++)o[e]===void 0&&(o[e]=new g(0,0,1,1)),p&&p[e]===void 0&&(p[e]=new H(1,1,1,1));for(let e=0;e<6;e++)if(t.push(o[e].z,o[e].w),t.push(o[e].x,o[e].w),t.push(o[e].x,o[e].y),t.push(o[e].z,o[e].y),p)for(let a=0;a<4;a++)h.push(p[e].r,p[e].g,p[e].b,p[e].a);k._ComputeSides(m,u,i,c,t,n.frontUVs,n.backUVs);const d=new k;if(d.indices=i,d.positions=u,d.normals=c,d.uvs=t,p){const e=m===k.DOUBLESIDE?h.concat(h):h;d.colors=e}return d}function M(n,s={},i=null){const c=new E(n,i);return s.sideOrientation=E._GetDefaultSideOrientation(s.sideOrientation),c._originalBuilderSideOrientation=s.sideOrientation,j(s).applyToMesh(c,s.updatable),c}k.CreateBox=j;E.CreateBox=(n,s,i=null,c,t)=>M(n,{size:s,sideOrientation:t,updatable:c},i);function _(n,s){$(s,!0);let i=A(s,"mesh",15),c=A(s,"physicsShape",19,()=>Z.BOX),t=X(s,["$$slots","$$events","$$legacy","mesh","physicsShape"]);ee(n,R({createMeshFunction:M,get physicsShape(){return c()}},()=>t,{get mesh(){return i()},set mesh(u){i(u)}})),F()}_.__docgen={data:[{name:"options",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"{ backUVs?: Vector4 | undefined; bottomBaseAt?: number | undefined; depth?: number | undefined; faceColors?: Color4[] | undefined; faceUV?: Vector4[] | undefined; ... 7 more ...; wrap?: boolean | undefined; }"},static:!1,readonly:!1},{name:"scene",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"Scene"},static:!1,readonly:!1},{name:"children",visibility:"public",keywords:[],kind:"let",type:{kind:"function",text:"Snippet<[]>"},static:!1,readonly:!1},{name:"mesh",visibility:"public",description:"if you want to use a mesh api, bind it",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"Mesh"},static:!1,readonly:!1,defaultValue:"..."},{name:"physics",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"boolean",text:"boolean"},static:!1,readonly:!1},{name:"physicsShape",visibility:"public",keywords:[],kind:"let",type:{kind:"union",type:[{kind:"const",type:"number",value:0,text:"PhysicsShapeType.SPHERE"},{kind:"const",type:"number",value:1,text:"PhysicsShapeType.CAPSULE"},{kind:"const",type:"number",value:2,text:"PhysicsShapeType.CYLINDER"},{kind:"const",type:"number",value:3,text:"PhysicsShapeType.BOX"},{kind:"const",type:"number",value:4,text:"PhysicsShapeType.CONVEX_HULL"},{kind:"const",type:"number",value:5,text:"PhysicsShapeType.CONTAINER"},{kind:"const",type:"number",value:6,text:"PhysicsShapeType.MESH"},{kind:"const",type:"number",value:7,text:"PhysicsShapeType.HEIGHTFIELD"},{kind:"type",type:"object",text:"PhysicsShape"}],text:"PhysicsShapeType.SPHERE | PhysicsShapeType.CAPSULE | PhysicsShapeType.CYLINDER | PhysicsShapeType.BOX | PhysicsShapeType.CONVEX_HULL | PhysicsShapeType.CONTAINER | PhysicsShapeType.MESH | PhysicsShapeType.HEIGHTFIELD | PhysicsShape"},static:!1,readonly:!1,defaultValue:"PhysicsShapeType.BOX"},{name:"physicsOptions",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"PhysicsAggregateParameters"},static:!1,readonly:!1},{name:"position",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"{ x: number; y: number; z: number; }"},static:!1,readonly:!1},{name:"rotation",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"{ x: number; y: number; z: number; }"},static:!1,readonly:!1},{name:"scaling",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"{ x: number; y: number; z: number; }"},static:!1,readonly:!1},{name:"force",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"{ x: number; y: number; z: number; }"},static:!1,readonly:!1},{name:"impulse",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"{ x: number; y: number; z: number; }"},static:!1,readonly:!1},{name:"onCollision",visibility:"public",keywords:[],kind:"let",type:{kind:"function",text:"(eventData: IPhysicsCollisionEvent, eventState: EventState) => void"},static:!1,readonly:!1},{name:"onCollisionOnce",visibility:"public",keywords:[],kind:"let",type:{kind:"function",text:"(eventData: IPhysicsCollisionEvent, eventState: EventState) => void"},static:!1,readonly:!1}],name:"Box.svelte"};const ce={title:"mesh/Box",tags:["autodocs"],component:_},{Story:pe}=ne();var le=q("<!> <!> <!>",1);function N(n,s){$(s,!1),G(),pe(n,{name:"Docs",args:{options:{backUVs:{x:0,y:0,z:1,w:1},bottomBaseAt:void 0,depth:4,faceColors:[{r:1,g:1,b:1,a:1}],faceUV:[{x:0,y:0,z:1,w:1}],frontUVs:{x:0,y:0,z:1,w:1},height:4,sideOrientation:void 0,size:void 0,topBaseAt:void 0,updatable:void 0,width:4,wrap:void 0},position:{x:0,y:0,z:0},rotation:{x:0,y:0,z:0},scaling:{x:1,y:1,z:1}},children:(c,t=Q)=>{se(c,{style:"width: 100%;",children:(u,B)=>{ie(u,{children:(C,O)=>{oe(C,{children:(P,x)=>{var b=le(),v=J(b);re(v,{position:new L(0,5,-10)});var w=I(v,2);ae(w,{direction:new L(0,1,0),intensity:.7});var V=I(w,2),S=W(()=>{var f,U,m,o,p,h,d,e,a,r,l,T,z,D;return{...t().options,faceUV:(U=(f=t().options)==null?void 0:f.faceUV)==null?void 0:U.map(y=>new g(y.x,y.y,y.z,y.w)),faceColors:(o=(m=t().options)==null?void 0:m.faceColors)==null?void 0:o.map(y=>new H(y.r,y.g,y.b,y.a)),frontUVs:(p=t().options)!=null&&p.frontUVs?new g((h=t().options)==null?void 0:h.frontUVs.x,(d=t().options)==null?void 0:d.frontUVs.y,(e=t().options)==null?void 0:e.frontUVs.z,(a=t().options)==null?void 0:a.frontUVs.w):void 0,backUVs:(r=t().options)!=null&&r.backUVs?new g((l=t().options)==null?void 0:l.backUVs.x,(T=t().options)==null?void 0:T.backUVs.y,(z=t().options)==null?void 0:z.backUVs.z,(D=t().options)==null?void 0:D.backUVs.w):void 0}});_(V,{get options(){return K(S)},get position(){return t().position},get rotation(){return t().rotation},get scaling(){return t().scaling}}),Y(P,b)},$$slots:{default:!0}})},$$slots:{default:!0}})},$$slots:{default:!0}})},$$slots:{default:!0},parameters:{__svelteCsf:{rawCode:`<Canvas style="width: 100%;">
  <Engine>
    <Scene>
      <FreeCamera position={new Vector3(0, 5, -10)} />
      <HemisphericLight direction={new Vector3(0, 1, 0)} intensity={0.7} />
      <Box
        options={{
          ...args.options,
          faceUV: args.options?.faceUV?.map((v) => new Vector4(v.x, v.y, v.z, v.w)),
          faceColors: args.options?.faceColors?.map((v) => new Color4(v.r, v.g, v.b, v.a)),
          frontUVs: args.options?.frontUVs
            ? new Vector4(
                args.options?.frontUVs.x,
                args.options?.frontUVs.y,
                args.options?.frontUVs.z,
                args.options?.frontUVs.w
              )
            : undefined,
          backUVs: args.options?.backUVs
            ? new Vector4(
                args.options?.backUVs.x,
                args.options?.backUVs.y,
                args.options?.backUVs.z,
                args.options?.backUVs.w
              )
            : undefined
        }}
        position={args.position}
        rotation={args.rotation}
        scaling={args.scaling}
      />
    </Scene>
  </Engine>
</Canvas>`}}}),F()}N.__docgen={version:3,name:"Box.stories.svelte",data:[],computed:[],methods:[],components:[],description:null,keywords:[],events:[],slots:[],refs:[]};const de=te(N,ce),we=["Docs"],Ve=de.Docs;export{Ve as Docs,we as __namedExportsOrder,ce as default};
