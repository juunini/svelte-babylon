import{p as G,s as ie,r as ne,i as ae,a as oe,t as ce}from"./props-CDwtXEPn.js";import{p as Y,a as Q,f as re,s as Z,g as le,n as pe,d as de}from"./index-client-0IVJ1HVs.js";import{M as J,u as K,V as v,w as q,x as ye,v as ue,l as he,c as me,d as be,C as fe,E as ve,S as xe,A as ke,H as Se}from"./create-runtime-stories-DQMLDbyL.js";import"./iframe-Cn89D-On.js";import"../sb-preview/runtime.js";import"./index-D-8MO0q_.js";import"./index-BHYIh-Xd.js";import"./_commonjsHelpers-Cpj98o6Y.js";function W(e={subdivisions:2,tessellation:16,height:1,radius:.25,capSubdivisions:6}){const p=Math.max(e.subdivisions?e.subdivisions:2,1)|0,f=Math.max(e.tessellation?e.tessellation:16,3)|0,b=Math.max(e.height?e.height:1,0),c=Math.max(e.radius?e.radius:.25,0),T=Math.max(e.capSubdivisions?e.capSubdivisions:6,1)|0,x=f,g=p,o=Math.max(e.radiusTop?e.radiusTop:c,0),r=Math.max(e.radiusBottom?e.radiusBottom:c,0),B=b-(o+r),E=0,_=2*Math.PI,C=Math.max(e.topCapSubdivisions?e.topCapSubdivisions:T,1),z=Math.max(e.bottomCapSubdivisions?e.bottomCapSubdivisions:T,1),h=Math.acos((r-o)/b);let y=[];const l=[],w=[],M=[];let I=0;const P=[],L=B*.5,O=Math.PI*.5;let i,s;const u=v.Zero(),n=v.Zero(),D=Math.cos(h),V=Math.sin(h),F=new q(o*V,L+o*D).subtract(new q(r*V,-L+r*D)).length(),U=o*h+F+r*(O-h);let A=0;for(s=0;s<=C;s++){const d=[],a=O-h*(s/C);A+=o*h/C;const t=Math.cos(a),m=Math.sin(a),k=t*o;for(i=0;i<=x;i++){const S=i/x,R=S*_+E,$=Math.sin(R),j=Math.cos(R);n.x=k*$,n.y=L+m*o,n.z=k*j,l.push(n.x,n.y,n.z),u.set(t*$,m,t*j),w.push(u.x,u.y,u.z),M.push(S,1-A/U),d.push(I),I++}P.push(d)}const X=b-o-r+D*o-D*r,se=V*(r-o)/X;for(s=1;s<=g;s++){const d=[];A+=F/g;const a=V*(s*(r-o)/g+o);for(i=0;i<=x;i++){const t=i/x,m=t*_+E,k=Math.sin(m),S=Math.cos(m);n.x=a*k,n.y=L+D*o-s*X/g,n.z=a*S,l.push(n.x,n.y,n.z),u.set(k,se,S).normalize(),w.push(u.x,u.y,u.z),M.push(t,1-A/U),d.push(I),I++}P.push(d)}for(s=1;s<=z;s++){const d=[],a=O-h-(Math.PI-h)*(s/z);A+=r*h/z;const t=Math.cos(a),m=Math.sin(a),k=t*r;for(i=0;i<=x;i++){const S=i/x,R=S*_+E,$=Math.sin(R),j=Math.cos(R);n.x=k*$,n.y=-L+m*r,n.z=k*j,l.push(n.x,n.y,n.z),u.set(t*$,m,t*j),w.push(u.x,u.y,u.z),M.push(S,1-A/U),d.push(I),I++}P.push(d)}for(i=0;i<x;i++)for(s=0;s<C+g+z;s++){const d=P[s][i],a=P[s+1][i],t=P[s+1][i+1],m=P[s][i+1];y.push(d),y.push(a),y.push(m),y.push(a),y.push(t),y.push(m)}if(y=y.reverse(),e.orientation&&!e.orientation.equals(v.Up())){const d=new ye;e.orientation.clone().scale(Math.PI*.5).cross(v.Up()).toQuaternion().toRotationMatrix(d);const a=v.Zero();for(let t=0;t<l.length;t+=3)a.set(l[t],l[t+1],l[t+2]),v.TransformCoordinatesToRef(a.clone(),d,a),l[t]=a.x,l[t+1]=a.y,l[t+2]=a.z}const H=new K;return H.positions=l,H.normals=w,H.uvs=M,H.indices=y,H}function ee(e,p={orientation:v.Up(),subdivisions:2,tessellation:16,height:1,radius:.25,capSubdivisions:6,updatable:!1},f=null){const b=new J(e,f);return W(p).applyToMesh(b,p.updatable),b}J.CreateCapsule=(e,p,f)=>ee(e,p,f);K.CreateCapsule=W;function N(e,p){Y(p,!0);let f=G(p,"mesh",15),b=G(p,"physicsShape",19,()=>ue.CAPSULE),c=ne(p,["$$slots","$$events","$$legacy","mesh","physicsShape"]);he(e,ie({createMeshFunction:ee,get physicsShape(){return b()}},()=>c,{get mesh(){return f()},set mesh(T){f(T)}})),Q()}N.__docgen={data:[{name:"options",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"ICreateCapsuleOptions"},static:!1,readonly:!1},{name:"scene",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"Scene"},static:!1,readonly:!1},{name:"children",visibility:"public",keywords:[],kind:"let",type:{kind:"function",text:"Snippet<[]>"},static:!1,readonly:!1},{name:"mesh",visibility:"public",description:"if you want to use a mesh api, bind it",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"Mesh"},static:!1,readonly:!1,defaultValue:"..."},{name:"physics",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"boolean",text:"boolean"},static:!1,readonly:!1},{name:"physicsShape",visibility:"public",keywords:[],kind:"let",type:{kind:"union",type:[{kind:"const",type:"number",value:0,text:"PhysicsShapeType.SPHERE"},{kind:"const",type:"number",value:1,text:"PhysicsShapeType.CAPSULE"},{kind:"const",type:"number",value:2,text:"PhysicsShapeType.CYLINDER"},{kind:"const",type:"number",value:3,text:"PhysicsShapeType.BOX"},{kind:"const",type:"number",value:4,text:"PhysicsShapeType.CONVEX_HULL"},{kind:"const",type:"number",value:5,text:"PhysicsShapeType.CONTAINER"},{kind:"const",type:"number",value:6,text:"PhysicsShapeType.MESH"},{kind:"const",type:"number",value:7,text:"PhysicsShapeType.HEIGHTFIELD"},{kind:"type",type:"object",text:"PhysicsShape"}],text:"PhysicsShapeType.SPHERE | PhysicsShapeType.CAPSULE | PhysicsShapeType.CYLINDER | PhysicsShapeType.BOX | PhysicsShapeType.CONVEX_HULL | PhysicsShapeType.CONTAINER | PhysicsShapeType.MESH | PhysicsShapeType.HEIGHTFIELD | PhysicsShape"},static:!1,readonly:!1,defaultValue:"PhysicsShapeType.CAPSULE"},{name:"physicsOptions",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"PhysicsAggregateParameters"},static:!1,readonly:!1},{name:"position",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"{ x: number; y: number; z: number; }"},static:!1,readonly:!1},{name:"rotation",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"{ x: number; y: number; z: number; }"},static:!1,readonly:!1},{name:"scaling",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"{ x: number; y: number; z: number; }"},static:!1,readonly:!1},{name:"force",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"{ x: number; y: number; z: number; }"},static:!1,readonly:!1},{name:"impulse",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"{ x: number; y: number; z: number; }"},static:!1,readonly:!1},{name:"collideAgainstForce",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"{ x: number; y: number; z: number; }"},static:!1,readonly:!1},{name:"collideAgainstImpulse",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"{ x: number; y: number; z: number; }"},static:!1,readonly:!1},{name:"receiveShadows",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"boolean",text:"boolean"},static:!1,readonly:!1},{name:"shadowEnabled",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"boolean",text:"boolean"},static:!1,readonly:!1},{name:"shadowGroup",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"array",text:"string[]"},static:!1,readonly:!1},{name:"onCollision",visibility:"public",keywords:[],kind:"let",type:{kind:"function",text:"(eventData: IPhysicsCollisionEvent, eventState: EventState) => void"},static:!1,readonly:!1},{name:"onCollisionOnce",visibility:"public",keywords:[],kind:"let",type:{kind:"function",text:"(eventData: IPhysicsCollisionEvent, eventState: EventState) => void"},static:!1,readonly:!1}],name:"Capsule.svelte"};const ge={title:"mesh/Capsule",tags:["autodocs"],component:N},{Story:Ce}=be();var we=ce("<!> <!> <!>",1);function te(e,p){Y(p,!1),ae(),Ce(e,{name:"Docs",args:{options:{orientation:{x:0,y:0,z:0},subdivisions:void 0,tessellation:void 0,height:4,radius:1,capSubdivisions:void 0,radiusTop:void 0,radiusBottom:void 0,topCapSubdivisions:void 0,bottomCapSubdivisions:void 0,updatable:void 0},position:{x:0,y:0,z:0},rotation:{x:0,y:0,z:0},scaling:{x:1,y:1,z:1}},parameters:{docs:{canvas:{sourceState:"shown"},source:{code:`<Canvas style="width: 100%;">
  <Engine>
    <Scene physics={false}>
      <ArcRotateCamera alpha={Math.PI / 2} beta={Math.PI / 2} radius={10} />
      <HemisphericLight direction={new Vector3(0, 1, 0)} intensity={0.7} />
      <Capsule
        options={{ height: 4, radius: 1 }}
        position={{ x: 0, y: 0, z: 0 }}
        rotation={{ x: 0, y: 0, z: 0 }}
        scaling={{ x: 1, y: 1, z: 1 }}
      />
    </Scene>
  </Engine>
</Canvas>`}},__svelteCsf:{rawCode:`<Canvas style="width: 100%;">
  <Engine>
    <Scene physics={false}>
      <ArcRotateCamera alpha={Math.PI / 2} beta={Math.PI / 2} radius={10} />
      <HemisphericLight direction={new Vector3(0, 1, 0)} intensity={0.7} />
      <Capsule
        options={{
          ...args.options,
          orientation: args.options?.orientation
            ? new Vector3(
                args.options?.orientation.x,
                args.options?.orientation.y,
                args.options?.orientation.z
              )
            : undefined
        }}
        position={args.position}
        rotation={args.rotation}
        scaling={args.scaling}
      />
    </Scene>
  </Engine>
</Canvas>`}},children:(b,c=pe)=>{fe(b,{style:"width: 100%;",children:(T,x)=>{ve(T,{children:(g,o)=>{xe(g,{physics:!1,children:(r,B)=>{var E=we(),_=re(E);ke(_,{alpha:Math.PI/2,beta:Math.PI/2,radius:10});var C=Z(_,2);Se(C,{direction:new v(0,1,0),intensity:.7});var z=Z(C,2),h=de(()=>{var y,l,w,M;return{...c().options,orientation:(y=c().options)!=null&&y.orientation?new v((l=c().options)==null?void 0:l.orientation.x,(w=c().options)==null?void 0:w.orientation.y,(M=c().options)==null?void 0:M.orientation.z):void 0}});N(z,{get options(){return le(h)},get position(){return c().position},get rotation(){return c().rotation},get scaling(){return c().scaling}}),oe(r,E)},$$slots:{default:!0}})},$$slots:{default:!0}})},$$slots:{default:!0}})},$$slots:{default:!0}}),Q()}te.__docgen={version:3,name:"Capsule.stories.svelte",data:[],computed:[],methods:[],components:[],description:null,keywords:[],events:[],slots:[],refs:[]};const Me=me(te,ge),De=["Docs"],He=Me.Docs;export{He as Docs,De as __namedExportsOrder,ge as default};
