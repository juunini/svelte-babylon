import{p as E,s as L,r as O,i as Z,a as _,t as B}from"./props-CDwtXEPn.js";import{p as D,a as R,f as I,s as g}from"./index-client-0IVJ1HVs.js";import{e as V,D as q,t as v,M as T,w as H,V as y,u as W,f as J,i as K,j as Q,k as ee,F as te,H as se,g as ne}from"./create-runtime-stories-L4uVnNlK.js";import"./iframe-ZhyaJ0jc.js";import"../sb-preview/runtime.js";import"./index-D-8MO0q_.js";import"./index-BHYIh-Xd.js";import"./_commonjsHelpers-Cpj98o6Y.js";function $(e,t){let i=E(t,"mesh",15),a=O(t,["$$slots","$$events","$$legacy","mesh"]);V(e,L({createMeshFunction:q},()=>a,{get mesh(){return i()},set mesh(r){i(r)}}))}$.__docgen={data:[{name:"mesh",visibility:"public",description:"if you want to use a mesh api, bind it",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"GroundMesh"},static:!1,readonly:!1,defaultValue:"..."},{name:"options",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"{ width?: number | undefined; height?: number | undefined; subdivisions?: number | undefined; subdivisionsX?: number | undefined; subdivisionsY?: number | undefined; updatable?: boolean | undefined; }"},static:!1,readonly:!1},{name:"scene",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"Scene"},static:!1,readonly:!1},{name:"children",visibility:"public",keywords:[],kind:"let",type:{kind:"function",text:"Snippet<[]>"},static:!1,readonly:!1},{name:"physics",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"boolean",text:"boolean"},static:!1,readonly:!1},{name:"physicsShape",visibility:"public",keywords:[],kind:"let",type:{kind:"union",type:[{kind:"const",type:"number",value:0,text:"PhysicsShapeType.SPHERE"},{kind:"const",type:"number",value:1,text:"PhysicsShapeType.CAPSULE"},{kind:"const",type:"number",value:2,text:"PhysicsShapeType.CYLINDER"},{kind:"const",type:"number",value:3,text:"PhysicsShapeType.BOX"},{kind:"const",type:"number",value:4,text:"PhysicsShapeType.CONVEX_HULL"},{kind:"const",type:"number",value:5,text:"PhysicsShapeType.CONTAINER"},{kind:"const",type:"number",value:6,text:"PhysicsShapeType.MESH"},{kind:"const",type:"number",value:7,text:"PhysicsShapeType.HEIGHTFIELD"},{kind:"type",type:"object",text:"PhysicsShape"}],text:"PhysicsShapeType.SPHERE | PhysicsShapeType.CAPSULE | PhysicsShapeType.CYLINDER | PhysicsShapeType.BOX | PhysicsShapeType.CONVEX_HULL | PhysicsShapeType.CONTAINER | PhysicsShapeType.MESH | PhysicsShapeType.HEIGHTFIELD | PhysicsShape"},static:!1,readonly:!1},{name:"physicsOptions",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"PhysicsAggregateParameters"},static:!1,readonly:!1},{name:"position",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"{ x: number; y: number; z: number; }"},static:!1,readonly:!1},{name:"rotation",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"{ x: number; y: number; z: number; }"},static:!1,readonly:!1},{name:"scaling",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"{ x: number; y: number; z: number; }"},static:!1,readonly:!1}],name:"Ground.svelte"};function M(e){const t=(e.segments||32)|0,i=e.diameterX||e.diameter||1,a=e.diameterY||e.diameter||1,r=e.diameterZ||e.diameter||1,c=e.arc&&(e.arc<=0||e.arc>1)?1:e.arc||1,f=e.slice&&e.slice<=0?1:e.slice||1,w=e.sideOrientation===0?0:e.sideOrientation||v.DEFAULTSIDE,S=!!e.dedupTopBottomIndices,k=new y(i/2,a/2,r/2),d=2+t,o=2*d,s=[],p=[],u=[],h=[];for(let m=0;m<=d;m++){const j=m/d,F=j*Math.PI*f;for(let b=0;b<=o;b++){const n=b/o,G=n*Math.PI*2*c,X=H.RotationZ(-F),z=H.RotationY(G),A=y.TransformCoordinates(y.Up(),X),C=y.TransformCoordinates(A,z),P=C.multiply(k),x=C.divide(k).normalize();p.push(P.x,P.y,P.z),u.push(x.x,x.y,x.z),h.push(n,j)}if(m>0){const b=p.length/3;for(let n=b-2*(o+1);n+o+2<b;n++)S?(m>1&&(s.push(n),s.push(n+1),s.push(n+o+1)),(m<d||f<1)&&(s.push(n+o+1),s.push(n+1),s.push(n+o+2))):(s.push(n),s.push(n+1),s.push(n+o+1),s.push(n+o+1),s.push(n+1),s.push(n+o+2))}}v._ComputeSides(w,p,s,u,h,e.frontUVs,e.backUVs);const l=new v;return l.indices=s,l.positions=p,l.normals=u,l.uvs=h,l}function N(e,t={},i=null){const a=new T(e,i);return t.sideOrientation=T._GetDefaultSideOrientation(t.sideOrientation),a._originalBuilderSideOrientation=t.sideOrientation,M(t).applyToMesh(a,t.updatable),a}v.CreateSphere=M;T.CreateSphere=(e,t,i,a,r,c)=>N(e,{segments:t,diameterX:i,diameterY:i,diameterZ:i,sideOrientation:c,updatable:r},a);function U(e,t){D(t,!0);let i=E(t,"mesh",15),a=E(t,"physicsShape",19,()=>W.SPHERE),r=O(t,["$$slots","$$events","$$legacy","mesh","physicsShape"]);V(e,L({createMeshFunction:N,get physicsShape(){return a()}},()=>r,{get mesh(){return i()},set mesh(c){i(c)}})),R()}U.__docgen={data:[{name:"options",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"{ arc?: number | undefined; backUVs?: Vector4 | undefined; diameter?: number | undefined; diameterX?: number | undefined; diameterY?: number | undefined; diameterZ?: number | undefined; ... 4 more ...; updatable?: boolean | undefined; }"},static:!1,readonly:!1},{name:"scene",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"Scene"},static:!1,readonly:!1},{name:"children",visibility:"public",keywords:[],kind:"let",type:{kind:"function",text:"Snippet<[]>"},static:!1,readonly:!1},{name:"mesh",visibility:"public",description:"if you want to use a mesh api, bind it",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"Mesh"},static:!1,readonly:!1,defaultValue:"..."},{name:"physics",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"boolean",text:"boolean"},static:!1,readonly:!1},{name:"physicsShape",visibility:"public",keywords:[],kind:"let",type:{kind:"union",type:[{kind:"const",type:"number",value:0,text:"PhysicsShapeType.SPHERE"},{kind:"const",type:"number",value:1,text:"PhysicsShapeType.CAPSULE"},{kind:"const",type:"number",value:2,text:"PhysicsShapeType.CYLINDER"},{kind:"const",type:"number",value:3,text:"PhysicsShapeType.BOX"},{kind:"const",type:"number",value:4,text:"PhysicsShapeType.CONVEX_HULL"},{kind:"const",type:"number",value:5,text:"PhysicsShapeType.CONTAINER"},{kind:"const",type:"number",value:6,text:"PhysicsShapeType.MESH"},{kind:"const",type:"number",value:7,text:"PhysicsShapeType.HEIGHTFIELD"},{kind:"type",type:"object",text:"PhysicsShape"}],text:"PhysicsShapeType.SPHERE | PhysicsShapeType.CAPSULE | PhysicsShapeType.CYLINDER | PhysicsShapeType.BOX | PhysicsShapeType.CONVEX_HULL | PhysicsShapeType.CONTAINER | PhysicsShapeType.MESH | PhysicsShapeType.HEIGHTFIELD | PhysicsShape"},static:!1,readonly:!1,defaultValue:"PhysicsShapeType.SPHERE"},{name:"physicsOptions",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"PhysicsAggregateParameters"},static:!1,readonly:!1},{name:"position",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"{ x: number; y: number; z: number; }"},static:!1,readonly:!1},{name:"rotation",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"{ x: number; y: number; z: number; }"},static:!1,readonly:!1},{name:"scaling",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"{ x: number; y: number; z: number; }"},static:!1,readonly:!1}],name:"Sphere.svelte"};const ie={title:"Introduce",tags:["autodocs"]},{Story:ae}=ne();var oe=B("<!> <!> <!> <!>",1),re=B(`<!> <h1>@juunini/svelte-babylonjs</h1> <h2>Caution</h2> <blockquote><p>‚ùó This is WIP and not ready for production use.</p></blockquote> <h2>Introduction</h2> Easily create 3D scenes with Babylon.js in Svelte. <h2>Usage</h2> <p>Click under <code>Show code</code> button or to see category</p> <h2>Installation</h2> <code><pre>
npm install @juunini/svelte-babylonjs
yarn add @juunini/svelte-babylonjs
pnpm add @juunini/svelte-babylonjs
bun add @juunini/svelte-babylonjs
  </pre></code> <h2>License</h2> MIT`,1);function Y(e,t){D(t,!1),Z();var i=re(),a=I(i);ae(a,{name:"Docs",parameters:{docs:{source:{language:"html",code:`<script lang="ts">
  import { Vector3 } from '@babylonjs/core/Maths/math.vector';

  import Canvas from '@juunini/svelte-babylonjs/Canvas.svelte';
  import BabylonEngine from '@juunini/svelte-babylonjs/engine/Engine.svelte';
  import BabylonScene from '@juunini/svelte-babylonjs/Scene.svelte';
  import BabylonFreeCamera from '@juunini/svelte-babylonjs/camera/FreeCamera.svelte';
  import BabylonGround from '@juunini/svelte-babylonjs/mesh/Ground.svelte';
  import BabylonHemisphericLight from '@juunini/svelte-babylonjs/light/HemisphericLight.svelte';
  import BabylonSphere from '@juunini/svelte-babylonjs/mesh/Sphere.svelte';
<\/script>

<Canvas style="width: 100%;">
  <BabylonEngine>
    <BabylonScene>
      <BabylonFreeCamera position={new Vector3(0, 5, -10)} />
      <BabylonHemisphericLight direction={new Vector3(0, 1, 0)} intensity={0.7} />
      <BabylonGround options={{ width: 6, height: 6 }} />
      <BabylonSphere options={{ diameter: 2, segments: 32 }} position={new Vector3(0, 1, 0)} />
    </BabylonScene>
  </BabylonEngine>
</Canvas>`}},__svelteCsf:{rawCode:`<Canvas style="width: 100%;">
  <Engine>
    <Scene>
      <FreeCamera position={new Vector3(0, 5, -10)} />
      <HemisphericLight direction={new Vector3(0, 1, 0)} intensity={0.7} />
      <Ground options={{ width: 6, height: 6 }} />
      <Sphere options={{ diameter: 2, segments: 32 }} position={new Vector3(0, 1, 0)} />
    </Scene>
  </Engine>
</Canvas>`}},children:(r,c)=>{K(r,{style:"width: 100%;",children:(f,w)=>{Q(f,{children:(S,k)=>{ee(S,{children:(d,o)=>{var s=oe(),p=I(s);te(p,{position:new y(0,5,-10)});var u=g(p,2);se(u,{direction:new y(0,1,0),intensity:.7});var h=g(u,2);$(h,{options:{width:6,height:6}});var l=g(h,2);U(l,{options:{diameter:2,segments:32},position:new y(0,1,0)}),_(d,s)},$$slots:{default:!0}})},$$slots:{default:!0}})},$$slots:{default:!0}})},$$slots:{default:!0}}),_(e,i),R()}Y.__docgen={version:3,name:"Introduce.stories.svelte",data:[],computed:[],methods:[],components:[],description:null,keywords:[],events:[],slots:[],refs:[]};const pe=J(Y,ie),fe=["Docs"],ve=pe.Docs;export{ve as Docs,fe as __namedExportsOrder,ie as default};
