const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./create-runtime-stories-Dd8eu6kK.js","./props-CDwtXEPn.js","./index-client-0IVJ1HVs.js","./iframe-8l14vsvk.js","./index-D-8MO0q_.js","./index-BHYIh-Xd.js","./_commonjsHelpers-Cpj98o6Y.js","./pass.fragment-5DvvJ51o.js"])))=>i.map(i=>d[i]);
import{_ as E}from"./iframe-8l14vsvk.js";import{e as T,T as m,f as D,g as S,h as x}from"./create-runtime-stories-Dd8eu6kK.js";import"../sb-preview/runtime.js";import"./props-CDwtXEPn.js";import"./index-client-0IVJ1HVs.js";import"./index-D-8MO0q_.js";import"./index-BHYIh-Xd.js";import"./_commonjsHelpers-Cpj98o6Y.js";let l,u=null;async function R(){return u||(u=new Promise((a,s)=>{let n,e=null;const o={preserveDrawingBuffer:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};E(async()=>{const{ThinEngine:i}=await import("./create-runtime-stories-Dd8eu6kK.js").then(p=>p.a2);return{ThinEngine:i}},__vite__mapDeps([0,1,2,3,4,5,6]),import.meta.url).then(({ThinEngine:i})=>{try{n=new OffscreenCanvas(100,100),e=new i(n,!1,o)}catch{n=document.createElement("canvas"),e=new i(n,!1,o)}D.Instances.pop(),D.OnEnginesDisposedObservable.add(t=>{e&&t!==e&&!e.isDisposed&&D.Instances.length===0&&y()}),e.getCaps().parallelShaderCompile=void 0;const p=new S(e);E(async()=>{const{passPixelShader:t}=await import("./pass.fragment-5DvvJ51o.js");return{passPixelShader:t}},__vite__mapDeps([7,0,1,2,3,4,5,6]),import.meta.url).then(({passPixelShader:t})=>{if(!e){s("Engine is not defined");return}const f=new x({engine:e,name:t.name,fragmentShader:t.shader,samplerNames:["textureSampler"]});l={canvas:n,engine:e,renderer:p,wrapper:f},a(l)})}).catch(s)})),await u}async function _(a,s,n,e,o="image/png",i,p){const t=await n.readPixels(0,0,a,s),f=new Uint8Array(t.buffer);w(a,s,f,e,o,i,!0,void 0,p)}function v(a,s,n,e="image/png",o,i=!1,p=!1,t){return new Promise(f=>{w(a,s,n,r=>f(r),e,o,i,p,t)})}function w(a,s,n,e,o="image/png",i,p=!1,t=!1,f){R().then(r=>{if(r.engine.setSize(a,s,!0),n instanceof Float32Array){const d=new Uint8Array(n.length);let c=n.length;for(;c--;){const g=n[c];d[c]=Math.round(T(g)*255)}n=d}const h=r.engine.createRawTexture(n,a,s,5,!1,!p,1);r.renderer.setViewport(),r.renderer.applyEffectWrapper(r.wrapper),r.wrapper.effect._bindTexture("textureSampler",h),r.renderer.draw(),t?m.ToBlob(r.canvas,d=>{const c=new FileReader;c.onload=g=>{const A=g.target.result;e&&e(A)},c.readAsArrayBuffer(d)},o,f):m.EncodeScreenshotCanvasData(r.canvas,e,o,i,f),h.dispose()})}function y(){l?(l.wrapper.dispose(),l.renderer.dispose(),l.engine.dispose()):u==null||u.then(a=>{a.wrapper.dispose(),a.renderer.dispose(),a.engine.dispose()}),u=null,l=null}const M={DumpData:w,DumpDataAsync:v,DumpFramebuffer:_,Dispose:y},b=()=>{m.DumpData=w,m.DumpDataAsync=v,m.DumpFramebuffer=_};b();export{y as Dispose,w as DumpData,v as DumpDataAsync,_ as DumpFramebuffer,M as DumpTools};
